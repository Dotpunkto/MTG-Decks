// <auto-generated />
using System;
using MTG_Decks.Server.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MTG_Decks.Server.Migrations
{
    [DbContext(typeof(MTG_Context))]
    [Migration("20210328112802_Migration2")]
    partial class Migration2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("MTG_Decks.Entities.ArtistIDS", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Artist_id")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CardsID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("CardsID");

                    b.ToTable("ArtistIDS");
                });

            modelBuilder.Entity("MTG_Decks.Entities.CardDto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Artist")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Booster")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Border_color")
                        .HasColumnType("TEXT");

                    b.Property<float>("CMC")
                        .HasColumnType("REAL");

                    b.Property<string>("Card_back_id")
                        .HasColumnType("TEXT");

                    b.Property<int>("Cardmarket_id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Collector_number")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Digital")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Edhrec_rank")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Flavor_text")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Foil")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Frame")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Full_art")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Highres_image")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Illustration_id")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Image_urisID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Lang")
                        .HasColumnType("TEXT");

                    b.Property<string>("Layout")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LegalitiesID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mana_cost")
                        .HasColumnType("TEXT");

                    b.Property<int>("Mtgo_foil_id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Mtgo_id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Nonfoil")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Object")
                        .HasColumnType("TEXT");

                    b.Property<string>("Oracle_id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Oracle_text")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Oversized")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Power")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PricesID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Prints_search_uri")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Promo")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Purchase_urisID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Rarity")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Related_urisID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Released_at")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Reprint")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Reserved")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Rulings_uri")
                        .HasColumnType("TEXT");

                    b.Property<string>("Scryfall_set_uri")
                        .HasColumnType("TEXT");

                    b.Property<string>("Scryfall_uri")
                        .HasColumnType("TEXT");

                    b.Property<string>("Set")
                        .HasColumnType("TEXT");

                    b.Property<string>("Set_search_uri")
                        .HasColumnType("TEXT");

                    b.Property<string>("Set_type")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Story_spotlight")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tcgplayer_id")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Textless")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Toughness")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type_line")
                        .HasColumnType("TEXT");

                    b.Property<string>("URI")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Variation")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("Image_urisID");

                    b.HasIndex("LegalitiesID");

                    b.HasIndex("PricesID");

                    b.HasIndex("Purchase_urisID");

                    b.HasIndex("Related_urisID");

                    b.ToTable("Card");
                });

            modelBuilder.Entity("MTG_Decks.Entities.ColorIdentity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CardID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Color")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("CardID");

                    b.ToTable("ColorIdentity");
                });

            modelBuilder.Entity("MTG_Decks.Entities.Colors", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CardID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Color")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("CardID");

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("MTG_Decks.Entities.Games", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CardID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Game")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("CardID");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("MTG_Decks.Entities.ImageUris", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Art_crop")
                        .HasColumnType("TEXT");

                    b.Property<string>("Border_crop")
                        .HasColumnType("TEXT");

                    b.Property<string>("LLarge")
                        .HasColumnType("TEXT");

                    b.Property<string>("Normal")
                        .HasColumnType("TEXT");

                    b.Property<string>("PNG")
                        .HasColumnType("TEXT");

                    b.Property<string>("Small")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("ImageUris");
                });

            modelBuilder.Entity("MTG_Decks.Entities.Keywords", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CardID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Keyword")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("CardID");

                    b.ToTable("Keywords");
                });

            modelBuilder.Entity("MTG_Decks.Entities.Legalities", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Brawl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Commander")
                        .HasColumnType("TEXT");

                    b.Property<string>("Duel")
                        .HasColumnType("TEXT");

                    b.Property<string>("Future")
                        .HasColumnType("TEXT");

                    b.Property<string>("Gladiator")
                        .HasColumnType("TEXT");

                    b.Property<string>("Historic")
                        .HasColumnType("TEXT");

                    b.Property<string>("Legacy")
                        .HasColumnType("TEXT");

                    b.Property<string>("Modern")
                        .HasColumnType("TEXT");

                    b.Property<string>("Oldschool")
                        .HasColumnType("TEXT");

                    b.Property<string>("Pauper")
                        .HasColumnType("TEXT");

                    b.Property<string>("Penny")
                        .HasColumnType("TEXT");

                    b.Property<string>("Pioneer")
                        .HasColumnType("TEXT");

                    b.Property<string>("Premodern")
                        .HasColumnType("TEXT");

                    b.Property<string>("Standard")
                        .HasColumnType("TEXT");

                    b.Property<string>("Vintage")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Legalities");
                });

            modelBuilder.Entity("MTG_Decks.Entities.MultiverseIDS", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CardsID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Multiverse_ids")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("CardsID");

                    b.ToTable("MultiverseIDS");
                });

            modelBuilder.Entity("MTG_Decks.Entities.Prices", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EUR")
                        .HasColumnType("TEXT");

                    b.Property<string>("Eur_foil")
                        .HasColumnType("TEXT");

                    b.Property<string>("TIX")
                        .HasColumnType("TEXT");

                    b.Property<string>("USD")
                        .HasColumnType("TEXT");

                    b.Property<string>("Usd_foil")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("MTG_Decks.Entities.ProducedMana", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CardID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mana")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("CardID");

                    b.ToTable("ProducedMana");
                });

            modelBuilder.Entity("MTG_Decks.Entities.PurchaseUris", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cardhoarder")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cardmarket")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tcgplayer")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("PurchaseUris");
                });

            modelBuilder.Entity("MTG_Decks.Entities.RelatedUris", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Edhrec")
                        .HasColumnType("TEXT");

                    b.Property<string>("Gatherer")
                        .HasColumnType("TEXT");

                    b.Property<string>("Mtgtop8")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tcgplayer_decks")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("RelatedUris");
                });

            modelBuilder.Entity("MTG_Decks.Entities.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .HasColumnType("TEXT");

                    b.Property<string>("Token")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("MTG_Decks.Entities.ArtistIDS", b =>
                {
                    b.HasOne("MTG_Decks.Entities.CardDto", "Cards")
                        .WithMany("Artist_ids")
                        .HasForeignKey("CardsID");

                    b.Navigation("Cards");
                });

            modelBuilder.Entity("MTG_Decks.Entities.CardDto", b =>
                {
                    b.HasOne("MTG_Decks.Entities.ImageUris", "Image_uris")
                        .WithMany()
                        .HasForeignKey("Image_urisID");

                    b.HasOne("MTG_Decks.Entities.Legalities", "Legalities")
                        .WithMany()
                        .HasForeignKey("LegalitiesID");

                    b.HasOne("MTG_Decks.Entities.Prices", "Prices")
                        .WithMany()
                        .HasForeignKey("PricesID");

                    b.HasOne("MTG_Decks.Entities.PurchaseUris", "Purchase_uris")
                        .WithMany()
                        .HasForeignKey("Purchase_urisID");

                    b.HasOne("MTG_Decks.Entities.RelatedUris", "Related_uris")
                        .WithMany()
                        .HasForeignKey("Related_urisID");

                    b.Navigation("Image_uris");

                    b.Navigation("Legalities");

                    b.Navigation("Prices");

                    b.Navigation("Purchase_uris");

                    b.Navigation("Related_uris");
                });

            modelBuilder.Entity("MTG_Decks.Entities.ColorIdentity", b =>
                {
                    b.HasOne("MTG_Decks.Entities.CardDto", "Card")
                        .WithMany("Color_identity")
                        .HasForeignKey("CardID");

                    b.Navigation("Card");
                });

            modelBuilder.Entity("MTG_Decks.Entities.Colors", b =>
                {
                    b.HasOne("MTG_Decks.Entities.CardDto", "Card")
                        .WithMany("Colors")
                        .HasForeignKey("CardID");

                    b.Navigation("Card");
                });

            modelBuilder.Entity("MTG_Decks.Entities.Games", b =>
                {
                    b.HasOne("MTG_Decks.Entities.CardDto", "Card")
                        .WithMany("Games")
                        .HasForeignKey("CardID");

                    b.Navigation("Card");
                });

            modelBuilder.Entity("MTG_Decks.Entities.Keywords", b =>
                {
                    b.HasOne("MTG_Decks.Entities.CardDto", "Card")
                        .WithMany("Keywords")
                        .HasForeignKey("CardID");

                    b.Navigation("Card");
                });

            modelBuilder.Entity("MTG_Decks.Entities.MultiverseIDS", b =>
                {
                    b.HasOne("MTG_Decks.Entities.CardDto", "Cards")
                        .WithMany("Multiverse_ids")
                        .HasForeignKey("CardsID");

                    b.Navigation("Cards");
                });

            modelBuilder.Entity("MTG_Decks.Entities.ProducedMana", b =>
                {
                    b.HasOne("MTG_Decks.Entities.CardDto", "Card")
                        .WithMany("Produced_mana")
                        .HasForeignKey("CardID");

                    b.Navigation("Card");
                });

            modelBuilder.Entity("MTG_Decks.Entities.CardDto", b =>
                {
                    b.Navigation("Artist_ids");

                    b.Navigation("Color_identity");

                    b.Navigation("Colors");

                    b.Navigation("Games");

                    b.Navigation("Keywords");

                    b.Navigation("Multiverse_ids");

                    b.Navigation("Produced_mana");
                });
#pragma warning restore 612, 618
        }
    }
}
