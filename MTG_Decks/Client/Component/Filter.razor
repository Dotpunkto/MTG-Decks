@inject HttpClient Http
@using MTG_Decks.Shared.Model

<div class="filter-container">
    <div class="filter">
        <div class="filterRow">
            <a href="#"><img src="images/black.png" /></a>
            <a href="#"><img src="images/white.png" /></a>
            <a href="#"><img src="images/blue.png" /></a>
            <a href="#"><img src="images/green.png" /></a>
            <a href="#"><img src="images/red.png" /></a>
            <a href="#"><img src="images/colorLess.png" /></a>

            <div class="autocomplete-container">
                @if (autocompleteList.Count > 0)
                {
                    <div class="suggest-container">
                        @foreach (var item in autocompleteList)
                        {
                            <p>@item</p>
                        }
                    </div>
                }
                <input id="CardName" class="filterInput" @oninput="Research" />
            </div>

            @*<DropDown></DropDown>
                <DropDown></DropDown>
                <DropDown></DropDown>*@
        </div>
        <div class="filterRow">
            @*<DropDown></DropDown>
                <DropDown></DropDown>
                <DropDown></DropDown>
                <DropDown></DropDown>
                <DropDown></DropDown>
                <DropDown></DropDown>
                <DropDown></DropDown>*@
        </div>
    </div>
</div>

@code {
    public List<string> autocompleteList = new List<string>();

    public async Task Research(ChangeEventArgs e)
    {
        string url = $"https://api.scryfall.com/cards/autocomplete?q={e.Value}";
        AutocompleteResponse response = await Http.GetFromJsonAsync<AutocompleteResponse>(url);
        if (response)
        {

        }
        autocompleteList = response.Data;
    }
}
